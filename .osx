#!/usr/bin/env bash

# Applications
# ------------

# Install Homebrew unless it is already available.
which brew &> /dev/null || {
  ruby -e "$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)"
}

# Git is essential to Homebrew, so have it installed right after it. While I
# don't use Mercurial, a lot of packages require it for HEAD installs.
brew install git mercurial

# Now, install the GNU core utilities (ls, rm, etc.). By default they are
# prefixed with `g` (gls, grm, etc.), but the zshrc adds their unprefixed
# versions to the $PATH.
brew install coreutils

# I like Vim, so have it installed by default. Build it with Lua support, so I
# can test some of the new plugins.
brew install lua
brew install vim --override-system-vi --with-lua

# The silver searcher is a great fast searching tool. Similiar to ack, but
# faster.
brew install ag

# Settings
# --------

# Don't require sudo password for the current user. Don't copy this if you have
# the fear that it'll break your sudo and lock you out your own system.
cat <<-RUBY | sudo ruby
  no_password_definition = <<-DEF.gsub(/^[ ]{4}/, '')
    # Don't require password for the $USER user.
    $USER ALL=(ALL) NOPASSWD: ALL
  DEF

  open("/etc/sudoers", "a+") do |sudoers|
    break if sudoers.read.include?(no_password_definition)
    sudoers.write("\n#{no_password_definition}")
  end
RUBY

# Don't show shadows around the captured windows.
defaults write com.apple.screencapture disable-shadow -bool true
killall SystemUIServer

# Check for software updates daily, not just once per week.
defaults write com.apple.SoftwareUpdate ScheduleFrequency -int 1

# Disable Notification Center and remove the menu bar icon.
sudo launchctl unload -w /System/Library/LaunchAgents/com.apple.notificationcenterui.plist &> /dev/null

# Disable press-and-hold for keys in favor of key repeat.
defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false

# Set a keyboard repeat rate of 2ms.
defaults write NSGlobalDomain KeyRepeat -int 2

# Disable the two-finge swipe that triggers back and forward in Chrome.
defaults write com.google.Chrome.plist AppleEnableSwipeNavigateWithScrolls -bool false

# Display the battery charge in a percentage.
defaults write com.apple.menuextra.battery ShowPercent -string "YES"

# Updates
# -------

# Running `brew update` will sync up the formulae, but won't upgrade the
# currently installed packages to their latest versions.
brew update && brew upgrade

# Diagnostics
# -----------

# Running `brew doctor` will show pretty useful diagnostics information about
# Homebrew's health. For example, if I ever forget to install the XCode command
# line tools, it will remind me.
brew doctor
